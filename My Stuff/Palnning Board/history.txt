// ----------------------------------------------------------------------------------------------------------------------


// ----------------------------------------------------------------------------------------------------------------------
*** 2024-08-18 (inc) (3W) ***
    - terragrunt
    - slight deep learning about IAC
*** 2024-09-07 (inc) ***


// ----------------------------------------------------------------------------------------------------------------------
*** 2024-01-13 (inc) ***
    - Softwares Timeline project
*** 2024-07-01 (inc) ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-06-01 (inc) ***
    ✓ traceing -> definition
    ✓ learn <docker container cp> command
    ✓ nohup command
    ✓ forwardRef refactor REACT (from v19)
    ✓ tevn
*** 2024-06-05 (inc) ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-03-10 (inc) ***
    - the big refactor 
        ✓ all JavaScript
        ✓ all Python

        - Web Brwoser APIs
            ✓ DOM Events
            ✓ File
            ✓ Form
            ✓ Service Worker 
            ✓ Web Worker 
            ✓ DOM 
            ✓ BOM 
            ✓ Cache 
            ✓ Drag & Drop 

        ✓ Docker

        ✓ Node.js
            ✓ console
            ✓ process
            ✓ string decoder
            ✓ os
            ✓ path
            ✓ repl
            ✓ times
            ✓ query string
            ✓ service workers
            
            Bonus:
                ✓ Basics
                ✓ Zlib

    ✓ python warnings lib
    
    ✓ frontend testing
      - do that with GRACE
*** 2024-03-30 (inc) ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2025-02-03 (4w) ***
    ✓ express body validation
    ✓ logging in nodejs (what is the popular lib for this)

    - python built-in libs
      ✓ copy
      ✓ shutil
      ✓ tempfile
      ✓ pickle
      ✓ functools
      ✓ inspect
      ✓ io

    - Node.js (libs)
      ✓ readline lib
      ✓ assert (refactor)
      ✓ child process (refactor)

    ✓ SEO (Search Engine Optimalization) -> get your head around how search engine work
    
    ✓ bloom filter (space-efficient probabilistic data structure)
      ✓ link: https://en.wikipedia.org/wiki/Bloom_filter
    
    
    ✓ typescript utility types: https://www.typescriptlang.org/docs/handbook/utility-types.html
    ✓ upate your javascript knowledge: https://www.w3schools.com/js/js_2019.asp
*** 2025-03-02 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-11-11 (12w) (I kept extending this because I added a ton of stuff) ***
    ✓ Next.js 
      ✓ overview only -> nope full walkthrough (that's why it took soo long)
    ✓ Tailwind css (this turned out to be a full in depth course because we rething how CSS is used)

    ✓ React Component UI libraries (lookup)
    ✓ document typescript object key type

    ✓ Upgrade fully these pages in your doc:
      ✓ CSS
        ✓ grid
        ✓ rendering elements
        ✓ background
        ✓ effect and blend
        ✓ cursor and clip
        ✓ font / icon liraries
        ✓ transform
      ✓ HTML
        ✓ form
    - CSS 
      ✓ display: flow-root
      ✓ :has()
      ✓ :where()
      ✓ @container
      ✓ update var() in your css docs
      ✓ accent-color
      ✓ visibility: collapse
      ✓ font-variant-numeric
      ✓ text-wrap
      ✓ backdrop-filter
      ✓ @layer
      ✓ text-wrap: balance
      ✓ :focus-visible
      ✓ inset property
      ✓ margin-inline, etc... (all this stuff)
      ✓ subgrid
      ✓ nesting: https://www.youtube.com/watch?v=YnWPeA6l5UE

    ✓ Update python magic mock start() / end() mechanics
    
    ✓ my auto git push script
    
    ✓ tailwind with CDN (it's for development only)
    
    ✓ Popover api
    ✓ Fullscreen API: https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API
    X Beacon API: https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API

    ✓ update your python knowledge (up to v3.12)
    
    ✓ internationalization (frontend stuff -> maybe build this one in in the project as well)
    - Project with Next.js & tailwind css (chess probably -> nope My initial 1st project idea History map)
        - suspended because the goal is to make it production ready (I'd rather spend more time on in than release a mediocre project)
*** 2025-02-02 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-10-28 (2w) ***
    - OAuth2
      - dummy/test implementation maybe? (didn't implement because requires a considerable effort plus the actual user registration is an extra effort)
*** 2024-11-10 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-10-17 (10d)***
    ✓ some refactor
      ✓ node file system (big guy)

    ✓ check that python formating roule that we used in our job project (ruff)
    ✓ dig a bit in pre commit hooks
    
    ✓ frontend grid dev metodology 
      (bootstrap used a 12 grid system, but this is mostly design it's less of development)
    
    Bonus:
      ✓ dig a bit deeper in eslint (what is prettier, other linting tools in the current market)
*** 2024-10-27 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-09-02 (3w) ***
  - Authentication (started already but clouding has higher priority)
      ✓ the plan is to implement a small/mid scale produciton ready authentcation (DONE)
      ✓ before this maybe it's a good idea to create project templates (node.js with eslint, the selecton ect...)
      ✓ finish the authentication documentation as well!

      ✓ LDAP protocol
      ✓ SAML protocol
      ✓ prod usable file storage (the best thing is to use sqlite)
*** 2024-09-22 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-07-08 ***
  ✓ Vite
  
  ✓ mongoose
  ✓ sequilize
  
  ✓ refactor your SQLAlchemy docs
  
  ✓ book archive (or some simple CRUD db project) project for both libs -> sequelize, mongoose
    ✓ upsert sequelize & mongoose
  
  ✓ extra job:
    ✓ clealrfy document MySQL transaction
    ✓ clearify SQL wilcards (ex: %) (was already documented but didn't pay enough attention)
*** 2024-09-01 ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-06-17 ***
  ✓ YAML
  ✓ update debuggers docs (try it with vsCode) -> that was fruitful, I figured out how to use the VSCode debugger
  ✓ MongoDB (with this topic sniff around NoSQL in general)
*** 2024-07-07 ***

// ----------------------------------------------------------------------------------------------------------------------
*** ??? ***
    - cloud, DevOps tools all that stuff (cloud enginering)
      ✓ SSH
        ✓ complete login stuff with SSH
      ✓ linux firewall (UFW)
      ✓ crontab refactor
      ✓ Pydantic class @model_validator decorator 
      
      ✓ terraform
      - terragrunt?
      
        ✓ VS code debugger (for both JavaScript & Python) -> (for now I won't use it)
        ✓ update your pathlib docs to make it clearely readable at first glance
        ✓ clarify DNS records and stuff
      
      ✓ look a bit into configuration management tools
      ✓ general devOps stuff
*** 2024-06-16 ***

// ----------------------------------------------------------------------------------------------------------------------
*** ??? ***
    ✓ css scroll control properties
    ✓ aspect-ratio property
        - 6 HTML / CSS topic refactors (got much more)
            - refactor overlapping and overflow
*** ??? ***

// ----------------------------------------------------------------------------------------------------------------------
*** start 2024-03-18 ***
    ✓ poetry
        ✓ refresh a bit of venv and pyenv
    ✓ JavaScript Object.fromEntries()
    ✓ redux you can also return new object in the reducer
    
    
    - Optional:
        - HTML page refactor
            ✓ 1
            ✓ 2
            ✓ 3 / 4 / 5 / 6 / 7 / 8
        - CSS page refactor
            ✓ 1
            ✓ 2
            ✓ 3
            ✓ 3 / 4 / 5 / 6 / 7 
        ✓ cyber security (list attack types and practices how to prevent them)
*** ??? ***

// ----------------------------------------------------------------------------------------------------------------------
*** 2024-01-28 ***
    ✓ clarify super() keyword in javascript
        ✓ update react event handler (for react function components)
        ✓ dig around root cert (TLS in general)
    ✓ Learning networking stuff -> maybe start from Azure then figure out all networking stuff (also update you networking docs) (maybe I should put a limited time in this topic -> like 2 weeks)
        ✓ dig in http connection keep-alive (how long the connection is active stuf...)
        ✓ dig around sockets (domain socket, websocket)
        ✓ check Node UDP Notes for left over methods (address join stuff like this)     
*** by 2024-02-25 ***
    ✓ update react hooks (I'm working with this stuff so I have to prioritize it!) (react reworked)
        ✓ well I updated the whole react Docs :D (which tok over 20 hours -> surprise)
    ✓ dig deep in CORS (update page)
    ✓ something is wrong on the HTTP headers table UI (fix it)
    ✓ useNaviage() hook react-router-dom
*** by 2024-02-25 ***
*** start 2024-02-26 (inc) ***
    ✓ redesing the top table element and and the 2 pre elements in your pages (the goal is to make documnentatin as easy as possible)
    ✓ refactor Express.js
        ✓ go through all HTTP header content types and document it
        ✓ what about releases names like alpha beta ect...
    ✓ refactor nodejs streams page (learn web streams maybe)? 
    ✓ rpc (I've learned with RabbitMQ, but let's get a bit more info (where/how it's used, etc...))
    ✓ table-layout fixed css property
    ✓ refactor css pseudo selector page
    
    - Optional: 
        ✓ nodejs AbortSignal global object (not if have no time)
        - refactor other 3 other css pages
          ✓ 1
          ✓ 2
          ✓ 3
*** end 2024-03-17 (inc) ***

// ----------------------------------------------------------------------------------------------------------------------
*** by 2023-12-24 ***
    ✓ Redis

// ----------------------------------------------------------------------------------------------------------------------

*** by 2023-12-10 ***
    - message queue (rabbit MQ) / check out how celery related to this technique

// ----------------------------------------------------------------------------------------------------------------------